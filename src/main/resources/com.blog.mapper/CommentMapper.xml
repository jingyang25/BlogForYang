<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.blog.pojo.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="blogId" property="blogid" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="createTime" property="createtime" jdbcType="VARCHAR" />
    <result column="accessId" property="accessid" jdbcType="VARCHAR" />
  </resultMap>

    <resultMap id="ResultMapWithBLOBs" type="com.blog.pojo.Comment" extends="BaseResultMap" >
        <result column="content" property="content" jdbcType="LONGVARCHAR" />
    </resultMap>

  <sql id="Base_Column_List" >
    id, blogId, content, createTime, accessId
  </sql>

    <select id="queryAll" resultMap="ResultMapWithBLOBs"  >
    select *
    from comment
    where blogId = #{blogId}
    ORDER BY id DESC
    LIMIT #{offset}, #{limit}
  </select>


    <select id="countAllNum" resultType="java.lang.Integer">
    SELECT count(*) FROM comment
  </select>


    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from comment
        where id = #{id,jdbcType=INTEGER}
    </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>



  <insert id="insert" parameterType="com.blog.pojo.Comment" >
    insert into comment (id, blogId, content, 
      createTime, accessId)
    values (#{id,jdbcType=INTEGER}, #{blogid,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR},
      #{createtime,jdbcType=VARCHAR}, #{accessid,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.blog.pojo.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="blogid != null" >
        blogId,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="accessid != null" >
        accessId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blogid != null" >
        #{blogid,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="accessid != null" >
        #{accessid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="com.blog.pojo.Comment" >
    update comment
    <set >
      <if test="blogid != null" >
        blogId = #{blogid,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="accessid != null" >
        accessId = #{accessid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.pojo.Comment" >
    update comment
     set blogId = #{blogid,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      createTime = #{createtime,jdbcType=VARCHAR},
      accessId = #{accessid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>



  <update id="updateByPrimaryKey" parameterType="com.blog.pojo.Comment" >
    update comment
    set blogId = #{blogid,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      createTime = #{createtime,jdbcType=VARCHAR},
      accessId = #{accessid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>